@model BingoCard.Models.Player

@{
    ViewBag.Title = "RoomSelection";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@{
    var avatarURLTitle = "https://api.adorable.io/avatars/40/" + @Model.Name;
}

    <h2>
        Room Selection for <img src=@avatarURLTitle /> @Model.Name
        
    </h2>
<h5>Click on the room name to enter:</h5>
<hr />
@*<div class="row">
        <div class="col-md-12">
            <p><a class="btn btn-primary btn-lg center-block" href="@Url.Action("Create", "Player")">Create new player</a></p>
        </div>
    </div>*@
@{
    BingoCard.DataAccess.BingoCardDBContext db = new BingoCard.DataAccess.BingoCardDBContext();
    List<BingoCard.Models.Player> players = db.Players.ToList();
    List<BingoCard.Models.Player> playersNoRooms = new List<BingoCard.Models.Player>();
    List<BingoCard.Models.Room> rooms = db.Rooms.ToList();    
}
<div class="container-fluid">
    <div class="row">
        @{int contRoom = 0; }
        @foreach (var room in rooms)
        {
            contRoom++;
            var varRow = "row";
            if (contRoom % 2 != 0)
            {
                varRow = "";
            }
            <div class="@varRow">
                <div class="col-xs-6">
                    <p><a class="btn btn-primary btn-lg center-block" href="@Url.Action("EditRoom", "Card", new { id = Model.Id, roomId = room.Id })">@room.Name</a></p>
                    @foreach (var player in players)
                    {
                        if (player.RoomId == Guid.Empty)
                        {
                            if (!playersNoRooms.Contains(player))
                            {
                                playersNoRooms.Add(player);
                            }
                        }
                        if (room.Id == player.RoomId)
                        {
                            var avatarURL = "https://api.adorable.io/avatars/40/" + player.Name;
                            var bgColor = "bg-warning";
                            var icon = "";
                            if (@Model.Id == player.Id)
                            {
                                bgColor = "bg-danger";
                                icon = "glyphicon glyphicon-star-empty";
                            }
                            <p class=@bgColor>
                                <img src=@avatarURL /> @player.Name <span class="@icon"></span>
                            </p>
                        }                        
                    }
                    <hr />
                </div>
            </div>
        
        }
        <!-- Players No Room assigned-->
        @if (playersNoRooms.Count > 0)
        {
            <div class="col-xs-6">
                <p><a class="btn btn-default btn-lg center-block" href="@Url.Action("EditRoom", "Card", new { id = Model.Id, roomId = Guid.Empty })">Unassigned</a></p>
                @foreach (var player in playersNoRooms)
                {
                    var avatarURL = "https://api.adorable.io/avatars/40/" + player.Name;
                    <p><img src=@avatarURL />@player.Name</p>
                }
                <hr />
            </div>
        }
    </div>
    </div>
